[
{
	"uri": "/aulas/",
	"title": "Conteúdo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/aulas/0_eletrofisiologia/",
	"title": "Introdução a eletrofisiologia",
	"tags": [],
	"description": "",
	"content": "HIstória A história da eletrofisiologia começa na tentativa de identificar telepatia em humanos.\n 1929 - Hans Berger queria medir telepatia em humanos pela primeira vez: Como um soldado no exército alemão na primeira década de 1900, Hans Berger caiu de seu cavalo em frente de um carro de artilharia e quase foi atropelado. Quando ele voltou para o quartel, havia um telegrama de seu pai dizendo que sua irmã teve a “sensação” de que ele tinha sido ferido. Com essa motivação, Berger quis explorar manifestações físicas dessas transmissões psíquicas  1935 - Hallowell e Pauline Davis obtêm os primeiros registros de ERPs (potencial evocado). 1964 - Gray Walter reporta o primeiro componente cognitivo de ERP - era moderna da técnica 1964 - Sutton, Braren, Zubin e John descobrem o P300 1960: ERPlogy: estudo dos componentes do ERP 1980: Ressurgimento devido à popularização dos computadores   Eletroencefalograma EEG hoje Para aquisição de dados EEG, usualmente se utiliza equipamento de 128 eletrodos de posições delimitadas para medir atividade na superfície do córtex (medição de potencial elétrico).\nOs sinais elétricos detectados no couro cabeludo que têm origem não-cerebral são chamados de artefatos. A amplitude dos artefatos pode ser significativamente maior que a amplitude dos sinais corticais de interesse, o que facilita identificação das diferenças desses padrões.\nAlterações momentâneas na impedância de um determinado eletrodo pode causar “spikes”.\nNos casos do sinais de Eletroencefalografia (EEG), temos o ruído da rede elétrica que no Brasil é 60 Hz. Muitos laboratórios utilizam gaiola de Faraday para amenizar o problema (isolamento da energia), mas ainda assim a filtragem é necessária para garantir a qualidade do sinal coletado.\nAlém desses existem outros artefatos como ondas de baixas frequências devido a temperatura da cabeça do indivíduo. Deste modo, é extremamente importante aplicação de filtros nestes sinais para remoção de tais artefatos antes de qualquer outra análise.\nDas análises mais comuns realizadas com EEG, estão: ERP - Potenciais relacionados ao evento e Análise Espectral.\nPotencial relacionado ao evento - ERP O potencial evocado ou resposta evocada é um potencial elétrico registrado do sistema nervoso de um humano ou outro animal seguido da apresentação de um estímulo, distinto dos potenciais espontâneos detectados por eletroencefalografia (EEG).\n Análise espectral Com potenciais induzidos, com mudanças no tempo (eixo x), quando não há sincronia no tempo no experimento entre os voluntários, é utilizada a análise espectral.\nA análise de Fourier consiste na separação do sinal em vários componentes senoidais (soma de senos). As senóides são a base que levam qualquer ponto no espaço, nesse caso, é possível transportar qualquer sinal (finito).\nSNC A transformada de Fourier pega os sinais em várias frequências distintas e devolve as frequências fundamentais.\n Wavelets Análises cuidadosas dos registros do eletroencefalograma (EEG) podem fornecer informações valiosas sobre esse distúrbio disseminado do cérebro. A Wavelet é uma ferramenta de análise de tempo e frequência eficaz para a análise de sinais transientes. Suas propriedades de extração e representação de características podem ser usadas para analisar vários eventos transitórios em sinais biológicos.\n    "
},
{
	"uri": "/aulas/1_intror/",
	"title": "Introdução ao R",
	"tags": [],
	"description": "",
	"content": "Introdução ao R - comandos O R é um software importante para análise de dados estatísticos. Apesar de não ter uma interface gráfica , a usabilidade é melhor para personificação das análises e permite mais opções para visualização e análise de dados.\nVetor e matrizes no R: Para armazenar um valor a uma variável, simplesmente usamos:\nx = 3.7 O vetor é uma estrutura de dados básica do R, que permite armazenar um conjunto de valores numéricos ou de caractere sob um mesmo tipo.\nx = c(1, 2, 3, 4) x ## [1] 1 2 3 4 Para criar um vetor com repetidos valores, por exemplo uma repetição de zeros, utiliza-se:\nx = array(0, 100) x ## [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ## [36] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ## [71] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 Para criar uma matriz, utiliza-se uma estrutura similar.\nx = matrix(1, 2, 2) x ## [,1] [,2] ## [1,] 1 1 ## [2,] 1 1 Atribuindo algum valor (1000) ao intervalo, no caso primeira linha:\nx[1,]=1000 # Saída da matriz inteira com 1000 na primeira linha e 1 no resto: x ## [,1] [,2] ## [1,] 1000 1000 ## [2,] 1 1 Caso queira exibir uma única linha ou coluna, basta digitar o comando com a linha ou coluna desejada:\n# Coluna x[,2] ## [1] 1000 1 #Linha: x[2,] ## [1] 1 1  Listas no R: Listas são objetos que podem armazenar objetos de dados de tipos diferentes. É possível incluir data.frames, arrays, matrizes, vetores, fatores e mesmo listas em uma lista.\nlist=list() list$nome = \u0026quot;joao\u0026quot; list$idade = 40 list$vetor=c(1,2,3) list$nome ## [1] \u0026quot;joao\u0026quot; # Saída: list ## $nome ## [1] \u0026quot;joao\u0026quot; ## ## $idade ## [1] 40 ## ## $vetor ## [1] 1 2 3  Loops R: Para realizar uma repetição com variável de controle, o comando for() incrementa um índice dentro de uma sequência de valores.\nfor(i in 1:10){ print (i) } ## [1] 1 ## [1] 2 ## [1] 3 ## [1] 4 ## [1] 5 ## [1] 6 ## [1] 7 ## [1] 8 ## [1] 9 ## [1] 10 Para reaizar uma repetição pré-testada, o teste para sair do laço de repetição é realizado antes de entrar no laço, e para isso utilizamos a função while():\ni=1 while(i\u0026lt;=10){ print (i) i=i+1 } ## [1] 1 ## [1] 2 ## [1] 3 ## [1] 4 ## [1] 5 ## [1] 6 ## [1] 7 ## [1] 8 ## [1] 9 ## [1] 10 Ou outro exemplo:\ni=1 while(i\u0026lt;=10){ print (i) if (i\u0026lt;=5) { print(\u0026quot;menor ou igual a 5\u0026quot;) } else{ print(\u0026quot;maior que 5\u0026quot;) } i=i+1 } ## [1] 1 ## [1] \u0026quot;menor ou igual a 5\u0026quot; ## [1] 2 ## [1] \u0026quot;menor ou igual a 5\u0026quot; ## [1] 3 ## [1] \u0026quot;menor ou igual a 5\u0026quot; ## [1] 4 ## [1] \u0026quot;menor ou igual a 5\u0026quot; ## [1] 5 ## [1] \u0026quot;menor ou igual a 5\u0026quot; ## [1] 6 ## [1] \u0026quot;maior que 5\u0026quot; ## [1] 7 ## [1] \u0026quot;maior que 5\u0026quot; ## [1] 8 ## [1] \u0026quot;maior que 5\u0026quot; ## [1] 9 ## [1] \u0026quot;maior que 5\u0026quot; ## [1] 10 ## [1] \u0026quot;maior que 5\u0026quot; No R, o índice i for imutável, recomenda-se utilizar o “for” como opção de repetição.\n Outras funções úteis no R: A Estatística Descritiva está diretamente ligada à organização e descrição dos dados. É utilizada para sumarizar como as observações se distribuem e onde estão posicionadas (ex.: medidas de tendência central e dispersão) e como se apresentam em termos de associação. Os conceitos e métodos descritivos são ponto de partida da análise exploratória de dados, passo fundamental para análises estatísticas mais avançadas.\nConsiderando a matriz criada x,\nx ## [,1] [,2] ## [1,] 1000 1000 ## [2,] 1 1 temos as seguintes funções para estatística descritiva:\n# Média: mean(x) ## [1] 500.5 # Desvio padrão sd(x) ## [1] 576.7729 # Distribuição normal: rnorm(x) ## [1] -0.82708705 0.40291164 -0.06741388 0.05212912 # Boxplot: boxplot(x)   Leitura de dados de ECG A primeira vista, pode parecer contraintuitivo que num curso de Processamento de Sinais Neurais contenha análise de dados de Eletrocardiograma (ECG). Dentre os parâmetros que podem ser aferidos a partir do ECG é a frequência cardíaca (número de batimentos do coração que acontecem a cada minuto - bpm). A freqüência cardíaca é capaz de indicar uma ativação geral do sistema nervoso autônomo, responsável por controlar nossas reações corporais involuntárias. Ao expor uma pessoa em situações de maior demanda energética, o coração bate mais forte e mais rápido.\nO uso do ECG fornece dados informativos acerca dos processos psicofisiológicos em diversas situações, sendo altamente aplicável em estudos que investigam as respostas comportamentais como por exemplo de consumidores ou outros entrevistados.\nLeitura de dados de ECG: Na aula o professor disponibilizou dados de um arquivo em que ele coletou dados de ECG de si mesmo (a partir de um arduino). O arquivo contém uma única coluna que é o valor em mV coletado com o instrumento:\ndados = read.table(\u0026quot;ecg.txt\u0026quot;, header = FALSE) Para visualizar os dados da forma de série temporal, utiliza-se a função ts.plot(). Algumas versões do R Studio contém um problema para visualização dos dados, então utiliza-se a seguinte gambiarra recomendada pelo Stackoverflow:\n# Pra não dar erro \u0026quot;figure margins too large\u0026quot; no ts.plot: graphics.off() par(\u0026quot;mar\u0026quot;) ## [1] 5.1 4.1 4.1 2.1 par(mar=c(1,1,1,1)) Após implementar essas linhas, na sequência, visualizamos os dados com a função:\n# Plotando gráfico de linha - ECG ts.plot(dados) Um histograma pode ajudar a melhorar a visualização da amplitude do sinal:\nhist(dados$V1) Para fins de referência, consideremos como picos de batimentos os valores com resultados acima de 685mV, então destacaríamos os maiores:\n# Para percorrer todas as casas dos dados, detectando os picos: picos=array(0, nrow(dados)) for(i in 1:960){ if(dados$V1[i]\u0026gt;685){ picos[i]=1 } } # Unindo no plot as colunas de dados e picos ts.plot(cbind(dados$V1, picos)) # Como pode ver, ficou zoado, então ajustamos a escala e adicionamos cores para que se possa visualizar os dados: # cores: col 2 = preto e 1 vermelho ts.plot(cbind(dados$V1, picos+684), col=c(2,1)) O ajuste ainda não ficou muito claro. Toda vez que encontrar um pico, os valores conseguintes referem-se ao mesmo pico, ou seja, devemos limpar os dados (retirada de picos contínuos adjacentes). Neste caso, escolhemos ignorar os picos dos 10 dados seguintes ao primeiro pico.\nNota: Para percorrer o vetor completo, basta percorrer o código até os 10 últimos (critério de parada) dados. Os demais picos seriam ignorados de qualquer forma e poderia reproduzir erro no vetor.\nDessa forma, teríamos:\nfor(i in 1:(nrow(dados)-10) ){ if(picos[i]==1){ picos[(i+1):(i+10)]=0 } } ts.plot(cbind(dados$V1,picos+684),col=c(2,1))   "
},
{
	"uri": "/aulas/2_filtro_sinais/",
	"title": "Filtros de sinais",
	"tags": [],
	"description": "",
	"content": "O processo de filtragem de sinais permite a caracterização dos sinais a partir de suas características. Por exemplo, aplicado ao som as frequências mais altas representam os sons mais agudos, enquanto que as frequências mais baixas representam os sons mais graves.\nOs artefatos em EEG caracterizam de ondas não cerebrais, denominadas por ruídos, como por exemplo a frequência da rede elétrica de 60hz, ondas de baixas frequências devido ao calor no couro cabeludo do indivíduo. Deste modo, é extremamente importante aplicação de filtros nestes sinais para remoção de tais artefatos antes de qualquer outra análise.\nPara tratar esses sinais, seja, frequências altas, baixas ou algum determinado intervalo, definimos um filtro passa baixa a partir da subtração do sinal original pela média aritmética dos pontos ao redor. Alguns conceitos importantes para a construção dos filtros:\n Frequência de amostragem: Trata-se da frequência de sinais observados em um intervalo de tempo (medidos em hertz = 1/s).  Ex: No EEG utiliza-se uma frequência de 250 por segundo. Com FNIRS, utiliza-se em torno de 7 frames por segundo. Na ressonância magnética funcional (fMRI), temos 1 imagem a cada 2 segundos. Logo, a frequência de amostragem é 1/2 = 0.5Hz Observação: A frequência = 1/período da observação  Frequência de Nyquist: Corresponde à metade da frequência da taxa amostragem. Pelo teorema de Nyquist, para prevenir o aliasing (sobreposição de sinais) deve-se:aumentar da taxa de amostragem até duas vezes da maior frequência do sinal. Se o sinal é limitado no tempo a frequência de amostragem deve ser tão alta quanto se conseguir, pois em frequência o sinal se espalha por todo o espectro sendo não limitado; com isso deve-se remover ou filtrar as frequências acima da frequência mais alta desejada evitando a formação do aliasing  Note: A frequência de Nyquist vale para qualquer modalidade de técnica de neuroiumagem (fMRI,EEG,fNIRS…).   O filtro permite a passagem o sinal de parte dos dados e impede a retirada de outros. São os filtros:\n Passa-alta (High pass): Deixa passar as altas frequências (maior importância pra alta frequência e baixa importáncia para baixa frequência.\n Passa-baixa (Low pass): Deixa passar as baixas frequências e dá pouca importância às altas frequências.\n Passa-banda (band pass): O sinal resultante após o filtro possui apenas a banda de frequência utilizada no filtro.\n  Implementação de filtros em R e carregando dados: No R faremos primeiro o desenho do filtro: ou seja definir qual o tipo de frequências vamos passar, para isso usaremos o comando “butter” no pacote signal.\nCaso não tenha o pacote, utilize os comandos:\nInstalando pacote de sinais no R: * install.packages(“signal”)\ne no código chamar a blbioteca\nrequire(signal) O exercício da aula mostra a leitura de um banco de dados de sinais de EEG.\nPara isso, será necessário realizar a leitura dos dados:\nsinais=read.table(\u0026quot;oddball250hz.txt\u0026quot;,header=FALSE) ver também a verificação dos dados:\ndim(sinais) ## [1] 45461 33 Olhando o arquivo, ele é composto por 45461 linhas e 33 colunas (essas referentes aos 32 canais e uma última coluna de zeros).\nPara verificar os dados do arquivo em um plot:\n# Plot da série temporal: #gambiarra para o ts.plot funcionar no R Studio: graphics.off() par(\u0026quot;mar\u0026quot;) ## [1] 5.1 4.1 4.1 2.1 par(mar=c(1,1,1,1)) e o plot:\n# Plotando gráfico de linha ts.plot(sinais) A taxa de amostragem é a frequência em que a leitura ocorre: * HZ=1/INTERVALO, onde 1hz = 1/s\n# Suponha que o sinal foi adquirido sob uma taxa de amostragem de 250Hz: HZ= 250 Dessa forma, analisamos o sinal com base nessa amostragem, para todas as linhas, para o canal 5, com o plot do tipo l (linha):\n#Fazer gráfico com frescura: # plot(1:nrow(sinais), sinais[,5],type=\u0026quot;l\u0026quot;) # mas preciso considerar a frequência convertendo pra segundos: plot((1:nrow(sinais))/HZ, sinais[,5], type=\u0026quot;l\u0026quot;, xlab=\u0026quot;Tempo(s)\u0026quot;, ylab= \u0026quot;sinal uV\u0026quot;)  Utilizando a função do filtro (butter): Primeiramente se define qual o tipo de frequências vamos passar, para isso usaremos o comando “butter”. A função butter possui a seguinte síntaxe: * butter (n = ordem do filtro, w = cutoff, tipo = tipo de filtro) onde, + ordem do filtro = controla o decaimento da curva de ajuste do filtro, geralmente se usa 3 ou 5. + cutoff = frequências que se queira cortar (é um número de 0 a 1, neste caso é preciso fazer uma regra de 3; 0 = 1 e 1= frequências de Nyquist) + type = tipo de filtro (low/passa-baixa, high/passa-alta ou band-pass/passa banda)\nAplicando passa-baixa em 30Hz:\nFILTRO = butter(n=5, W =30/(HZ/2), type = \u0026quot;low\u0026quot;) # Gráfico do desenho do filtro: freqz(FILTRO) Após ter o filtro desenhado, aplica-lo sobre os dados do canal (neste caso seria o canal 5, como exemplo, mas poderia ser qlq um). Ao aplicar o filtro de forma direta teríamos ainda um problema:\nfiltrado_teste = filter(FILTRO, sinais[,5]) # bug de início do sinal, com valor muito alto. Neste caso “bugado” teríamos o seguinte retorno:\n#Fazer o grafico com os 2 sinais plot((1:nrow(sinais))/HZ, sinais[,5],type=\u0026quot;l\u0026quot;, xlab=\u0026quot;Tempo(s)\u0026quot;, ylab=\u0026quot;sinal(uV)\u0026quot;) #Acrescentar linha com o sinal filtrado lines((1:nrow(sinais))/HZ, filtrado_teste, col=2) Para isso resolve-se tirando a média do sinal:\ny = sinais[,5] - mean(sinais[,5]) # e novamente aplicando o filtro no sinal: filtrado = filter(FILTRO, y) obtendo então o sinal filtrado:\n#Acrescentar linha com o sinal filtrado plot((1:nrow(sinais))/HZ,y,type=\u0026quot;l\u0026quot;, xlab=\u0026quot;Tempo(s)\u0026quot;, ylab=\u0026quot;sinal(uV)\u0026quot;) lines((1:nrow(sinais))/HZ, filtrado, col=2) Dessa forma é possível aplicar outros filtros, alterando o tipo na função butter e aplicando aos sinais de todos os canais na função filter. Dica de exercício: Tente executar para outros canais ou então ajustando o filtro para outras frequências ou determinados intervalos de frequência.\nUm exemplo comum é a aplicação de um filtro que processe dados de um determinado intervalo (por exemplo, como a rede elétrica é 60hz mas há oscilações, processa-se sinal entre 59-61hz). Neste caso, queremos um passa-banda para deixar apenas entre as frequências de 1-40 hz:\n# butter (n = ordem do filtro, w = cutoff, tipo = tipo de filtro) # - n = Ordem do filtro = controla o decaimento da curva de ajuste do filtro, # geralmente se usa 3 ou 5. # -type = tipo de filtro (low/passa-baixa, high/passa-alta ou band-pass/passa banda) FILTRO = butter(n=5, W =c(1,40)/(HZ/2), type = \u0026quot;pass\u0026quot;) freqz(FILTRO) Quero aplicar este filtro em todas as colunas da matriz de sinais, realizando a retirada da média para tirar os outliers antes do filtro. O sinal bruto permanece sem o ajuste das médias, então para executar em todos os canais, é importante que y esteja nas interações:\nfsinais = matrix(0, nrow(sinais), ncol(sinais)) for (canal in 1:32) { y = sinais[,canal] - mean(sinais[,canal]) fsinais[,canal]=filter(FILTRO,y) } Para verificar o sinal bruto e filtrado de cada canal, tirando a média (o exemplo contempla o canal 1):\n#Checar o sinal bruto e filtrado plot((1:nrow(sinais))/HZ,sinais[,1]-mean(sinais[,1]),type=\u0026quot;l\u0026quot;,xlab=\u0026quot;Tempo(s)\u0026quot;, ylab=\u0026quot;sinal(uV)\u0026quot;) lines((1:nrow(sinais))/HZ,fsinais[,1],col=2) Observações sobre a implementação de filtros: 1. Adicionar a taxa de amostragem atribuindo um valor para HZ.\n Passa-baixa em 30hz: ** FILTRO = butter(n=5, W = 30/(HZ/2), type = “low”)\n Passa-banda para deixar apenas entre as frequências de 1-40 hz: ** FILTRO = butter(n=5, W = c(1,40)/(HZ/2), type = “pass”)\n Passa-alta para frequências acima de 0.2hz: ** FILTRO = butter(n=5, W = 0.2/(HZ/2), type = “high”)\n   "
},
{
	"uri": "/aulas/3_potenciaisevocados/",
	"title": "Potenciais Evocados",
	"tags": [],
	"description": "",
	"content": "Potencial relacionado a evento (ERP, do inglês Event-Related Potential), é uma resposta direta do cérebro a um específico estímulo cognitivo, sensorial, ou motor. ERPs são obtidos por promediação (no tempo).\nOs componentes são designados por uma letra (N - negative / P - positive), seguido de um número que pode indicar tanto a latência em ms como a posição da componente na forma de onda.\nAlguns exemplos de ERPs e suas devidas funções:\n P1 (ou P100) concentraram-se em observar as variações deste potencial durante estimulação visual. Pesquisas posteriores sobre o P1 começaram a olhar para alterações do P1 em relação à atenção seletiva. Sua amplitude máxima é observada sobre o lobo occipital, contralateral ao campo visual no qual o estímulo é apresentado. O N1 (também chamado de N100) é o primeiro componente negativo contínuo e o seu pico é normalmente observado entre 80 e 160 ms após o aparecimento do estímulo. Forte sobre a região fronto-central do couro cabeludo. Embora a maioria das pesquisas se concentra em estímulos auditivos, o N100 também ocorre para estimulação visual, olfativa e táctil. O N100 é pré-atencional e diretamente envolvido na percepção porque sua amplitude é fortemente dependente de coisas como o tempo de subida de um som, sua intensidade, o intervalo entre estímulos e a frequência comparativa, ou seja, sua amplitude aumenta em proporção a quanto um som difere em frequência de um som precedente. O P2 (P200) potencial positivo que ocorre cerca de 200 milissegundos frequentemente distribuído em torno das áreas centro-frontal e parieto-occipital do couro cabeludo. Sua associação ainda está em desenvolvimento pois há um grande e diversificado número de tarefas cognitivas associadas a essa componente. N2, ou N200, encontrada principalmente na parte anterior do couro cabeludo em resposta a estímulos auditivos inesperados ou raros,com ou sem atenção, é referido como a negatividade de incompatibilidade (mismatch negativity – MMN). Mais genericamente, foi descrito em tarefas que refletem a identificação de estímulos, deslocamentos atencionais, inibição de respostas motoras, superação de respostas estereotípicas ou monitoramento de conflitos, manutenção de informações de contexto, seleção de respostas, timing, e detecção de novidade (novelty) ou incompatibilidade (mismatch). P3 (P300) tipicamente medido mais fortemente pelos eletrodos que cobrem o lobo parietal, está suscitado no processo de tomada de decisão. Mais especificamente, considera-se que o P300 reflete processos envolvidos na avaliação ou categorização do estímulo. Geralmente é provocado usando o paradigma oddball, em que eventos alvo (ou “raro”) de baixa probabilidade são misturados com itens não-alvo (ou “padrão”) de alta probabilidade  Outros componentes de ERP mais tardios, como por exemplo o N400 e o P600 são muito usados na área de neurociência da linguagem. Os componentes mais pesquisados na literatura ainda são o N1 e o P3.\nOs dados deste material são de estímulos sonoros, um agudo e um grave em que o indivíduo deveria clicar no mouse ao ouvir o estímulo agudo.\n# Leitura dos dados sinais=read.table(\u0026quot;oddball250hz.txt\u0026quot;,header=FALSE) Para continuar a leitura dos filtros, deve-se realizar a leitura dos dados de canais também disponibilizados:\n# Leitura dos canais de EEG: nomes=scan(\u0026quot;nomecanais.txt\u0026quot;, what = \u0026quot;string\u0026quot;) Ao analisar o arquivo dos sinais, é possível verificar que a coluna 33 não se trata de sinais cerebrais, mas sim, a referência dos triggers (marcações do experimento). Dessa forma, realiza-se a leitura dos sinais e dos triggers, armazenando em matrizes separadas:\n# Separar o trigger dos sinais # Jogo fora o sinal 33 porque não é dado cerrebral trigger = sinais[,33] sinais= sinais[,1:32] Analisando a matriz trigger com o comando table, é possível verificar os tipos de eventos existentes no experimento (eventos raros marcados por 10 e frequentes marcados por 11):\n# Lendo o conteúdo do trigger: # esse comendo mostra o número de observações de cada tipo table(trigger) ## trigger ## 0 10 11 ## 45422 10 29 Olhando o conteúdo do trigger:\n# Conteúdo do vetor do trigger: ts.plot(trigger) Para identificação dos potenciais evocados, precisamos ainda definir os canais (a matriz sinais já exclui a coluna de trigger do arquivo) e pontos no tempo (número de linhas do arquivo):\n# Número de canais: Ncanais =ncol(sinais) # Número de pontos no tempo: T=nrow(sinais) Filtrando os sinais de todos os canais:\nFILTRO = butter(n=5, W =c(1,40)/(HZ/2), type = \u0026quot;pass\u0026quot;) freqz(FILTRO) fsinais = matrix(0, nrow(sinais), ncol(sinais)) for (canal in 1:32) { y = sinais[,canal] - mean(sinais[,canal]) fsinais[,canal]=filter(FILTRO,y) } plot((1:nrow(sinais))/HZ,sinais[,1]-mean(sinais[,1]),type=\u0026quot;l\u0026quot;,xlab=\u0026quot;Tempo(s)\u0026quot;, ylab=\u0026quot;sinal(uV)\u0026quot;) lines((1:nrow(sinais))/HZ,fsinais[,1],col=2) Considerando a taxa de amostragem de 250hz, quero calcular uma determinada janela no intervalo 100ms dado um canal:\n# Se a taxa de amostragem é HZ= 250, quero definir as janelas pré e pós estímulos, ou seja 1s = 250hz, 100ms = 250hz/10: JANELApos=HZ #janela de 1 segundo JANELApre=HZ/10 #janela de 100 milisegundos O comando which ajuda a separar os estímulos:\n#Descobrir quais as caselas do vetor trigger se referem ao estimulo freq e raro TiRaro= which(trigger==10) #estimulo raro TiFreq= which(trigger==11) #estimulo frequente Armazenando os potenciais evocados do estímulo raro:\n# Matriz que guarda os potenciais evocados medios do estimulo raro ti=1000 PERaro=matrix(0,length((ti-JANELApre):(ti+JANELApos)), Ncanais) # for pra cada canal for(canal in 1:Ncanais){ for(ti in TiRaro){ BASELINE=mean(fsinais[(ti-JANELApre):ti,canal]) y=fsinais[(ti-JANELApre):(ti+JANELApos),canal]-BASELINE PERaro[,canal]= PERaro[,canal]+y/length(TiRaro) } } Por exemplo, olhando a legenda no arquivo, nomedoscanais, vemos que o canal Fz se refere ao canal 5. Desa forma, o gráfico:\n#Fazer o grafico do potencial evocal no canal Fz. coluna 5 # estimulo acontece em milisegundos (ms) por isso converto com a taxa de # amostragem plot((1:nrow(PERaro))/HZ*1000-100, PERaro[,5],type=\u0026quot;l\u0026quot;, xlab=\u0026quot;Tempo(ms)\u0026quot;, ylab=\u0026quot;Sinal(uv)\u0026quot;) abline(v=0,lty=3) Agora armazenando os potenciais evocados do estímulo frequente:\n#Matriz que guarda os potenciais evocados medios de todos os canais PEFreq=matrix(0,length((ti-JANELApre):(ti+JANELApos)), Ncanais) #Calculo para todos os canais for(canal in 1:Ncanais){ for(ti in TiFreq){ BASELINE=mean(fsinais[(ti-JANELApre):ti, canal]) y=fsinais[(ti-JANELApre):(ti+JANELApos), canal] -BASELINE PEFreq[,canal] = PEFreq[,canal]+ y/length(TiFreq) } #fecha o for do ti } #fecha o for do canal #Fazer o grafico do potencial evocal no canal Fz. coluna 5 plot((1:nrow(PEFreq))/HZ*1000-100, PEFreq[,5], type=\u0026quot;l\u0026quot;, xlab=\u0026quot;Tempo(ms)\u0026quot;, ylab=\u0026quot;Sinal(uv)\u0026quot;) abline(v=0,lty=3) Para conseguir fazer uma comparação entre os potenciais evocados, adicionamos os dois gráficos conjuntamente. Sendo nas cores Preta para estímulo frequente e vermelho para estímulo raro.\n#Fazer o grafico do potencial evocal no canal Fz. coluna 5 #Do estimulo raro e frequente no mesmo grafico plot((1:nrow(PEFreq))/HZ*1000-100, PEFreq[,5],type=\u0026quot;l\u0026quot;, xlab=\u0026quot;Tempo(ms)\u0026quot;,ylab=\u0026quot;Sinal(uv)\u0026quot;,ylim=c(-7,7)) lines((1:nrow(PERaro))/HZ*1000-100, PERaro[,5],col=2) abline(v=0,lty=3) Obs: os valores arbitrários em ylim foram ajustes manuais para alinhar a visualização superior e inferior das linhas, ao fazer o plot de ambas poderia ter feito melhor, mas sabe como a vida é…\nAnalisando esse tipo de gráfico, é possível ver diferença entre os estímulos. Claro que para ter significância estatística precisaria de uma avaliação mais profunda para poder confirmar a real existência dessa diferença.\nFazer o plot da diferenca do PE raro e frequente no canal Pz, coluna 25:\ncanal=25 plot((1:nrow(PEFreq))/HZ*1000-100, PERaro[,canal]-PEFreq[,canal],type=\u0026quot;l\u0026quot;,xlab=\u0026quot;Tempo(ms)\u0026quot;, ylab=\u0026quot;sinal(uV)\u0026quot;,ylim=c(-8,4)) abline(v=0,lty=3) Resumo: Na questão de potenciais evocados, trabalhamos com as médias dos sinais. Basicamente visam dois objetivos:\n Sinal de EEG é extremamente ruidoso (artefatos musculares e do ambiente). Aumentar o SNR - signal-to-noise ratio (ou relação sinal-ruído em português)\n Extrair “componente”\u0026quot; comum entre os trials\n   "
},
{
	"uri": "/aulas/4_epocas/",
	"title": "Controle de qualidade",
	"tags": [],
	"description": "",
	"content": "O número de tentativas necessárias para obter um ERP depende de vários fatores, sendo o mais importante a “relação sinal-ruído” (Signal to Noise Ratio), ou seja, o tamanho relativo do sinal (o ERP) em relação ao tamanho do ruído. Em experimentos cognitivos, 30 a 50 apresentações de estímulo são normalmente necessárias para se obter um ERP médio bom e limpo.\nIdentificação de épocas (períodos dos estímulos) num experimento. O número de épocas (trials) aumenta a SNR.\nO código implementado abaixo foram calculados os ERPs associados aos dois tipos de estímulos (raros e frequentes) de um experimento. O sinal foi corrigido pela média do baseline, com a média de várias repetições para remoção de ruídos existentes.\n#Leitura de dados sinais=read.table(\u0026quot;OlhosFechados.txt\u0026quot;,header=FALSE) #Nome dos canais nomescanais=scan(\u0026quot;NOMEScanais.txt\u0026quot;,what=\u0026quot;string\u0026quot;) dim(sinais) ## [1] 45315 32 nomescanais ## [1] \u0026quot;Fp1\u0026quot; \u0026quot;Fp2\u0026quot; \u0026quot;F7\u0026quot; \u0026quot;F3\u0026quot; \u0026quot;Fz\u0026quot; \u0026quot;F4\u0026quot; \u0026quot;F8\u0026quot; \u0026quot;FC5\u0026quot; \u0026quot;FC1\u0026quot; \u0026quot;FC2\u0026quot; ## [11] \u0026quot;FC6\u0026quot; \u0026quot;T7\u0026quot; \u0026quot;C3\u0026quot; \u0026quot;Cz\u0026quot; \u0026quot;C4\u0026quot; \u0026quot;T8\u0026quot; \u0026quot;TP9\u0026quot; \u0026quot;CP5\u0026quot; \u0026quot;CP1\u0026quot; \u0026quot;CP2\u0026quot; ## [21] \u0026quot;CP6\u0026quot; \u0026quot;TP10\u0026quot; \u0026quot;P7\u0026quot; \u0026quot;P3\u0026quot; \u0026quot;Pz\u0026quot; \u0026quot;P4\u0026quot; \u0026quot;P8\u0026quot; \u0026quot;PO9\u0026quot; \u0026quot;O1\u0026quot; \u0026quot;Oz\u0026quot; ## [31] \u0026quot;O2\u0026quot; \u0026quot;PO10\u0026quot; Para saber o período de aquisição dos dados, basta dividir o número de linhas por 32:\n# Considerando taxa de amostragem e convertendo pra minutos: 45315/(200*60) ## [1] 3.77625 # Conteúdo do vetor do trigger: ts.plot(sinais) Para definição das épocas dos eventos (intervalos dos trials), precisamos identificar as amplitudes dos intervalos e assinalar na matriz os intervalos de tempo entre os eventos:\nComandos importantes:\n round(): arredondamento matemático\n floor(): arredondamento para baixo\n ceiling(): arredondamento para cima\n  # Análisando uma época de 5s numa taxa de amostragem de 200hz: # Considerando o tamanho de 5s, seria: # TAM = seg * HZ = 5 * 200 HZ = 200 # taxa de amostragem considerada: TamSegundos=5 # Numero de segundos do trial: TAM = TamSegundos*HZ Nepocas = floor(nrow(sinais)/TAM) Ncanais = ncol(sinais) # Inicializar a matriz com as amplitudes de cada epoca para cada canal: #Inicializar a matriz com as amplitudes de cada epoca para cada canal AMPLITUDE= matrix(0, Nepocas, Ncanais) for(canal in 1:Ncanais){ for(epoca in 1:Nepocas){ #Casela de inicio da epoca INICIO=(epoca-1)*TAM+1 #Casela de fim da epoca FIM=epoca*TAM #Calculo de amplitude AMPLITUDE[epoca,canal]=max(sinais[INICIO:FIM,canal])- min(sinais[INICIO:FIM,canal]) }#for da epoca }#for dos canais Para analisar os dados da amplitude, podemos ver a distribuição no histograma abaixo:\n#Analisar a distribuicao das amplitudes hist(c(AMPLITUDE)) Limitando um pouco a visualização, no caso em 150:\nLIMIAR=150 #escolhido analisando o histograma Criando uma matriz de controle de qualidade de dimensão idêntica ao da matriz AMPLITUDE. O ZERO corresponde a épocas sem problemas e UM são as épocas onde a amplitude foi maior que um limiar:\nCQ = matrix(0, Nepocas, Ncanais) CQ[which(AMPLITUDE\u0026gt;LIMIAR)]=1 Para identificar os CANAIS mais problemáticos e realizar a contagem das épocas descartadas em cada canal:\ncolSums(CQ) ## [1] 8 2 4 1 1 0 0 2 0 0 0 11 6 0 1 8 10 0 0 1 1 9 4 ## [24] 0 1 3 9 10 1 3 7 3 Unindo as colunas dos canais com as épocas descartadas:\ncbind(nomescanais,colSums(CQ)) ## nomescanais ## [1,] \u0026quot;Fp1\u0026quot; \u0026quot;8\u0026quot; ## [2,] \u0026quot;Fp2\u0026quot; \u0026quot;2\u0026quot; ## [3,] \u0026quot;F7\u0026quot; \u0026quot;4\u0026quot; ## [4,] \u0026quot;F3\u0026quot; \u0026quot;1\u0026quot; ## [5,] \u0026quot;Fz\u0026quot; \u0026quot;1\u0026quot; ## [6,] \u0026quot;F4\u0026quot; \u0026quot;0\u0026quot; ## [7,] \u0026quot;F8\u0026quot; \u0026quot;0\u0026quot; ## [8,] \u0026quot;FC5\u0026quot; \u0026quot;2\u0026quot; ## [9,] \u0026quot;FC1\u0026quot; \u0026quot;0\u0026quot; ## [10,] \u0026quot;FC2\u0026quot; \u0026quot;0\u0026quot; ## [11,] \u0026quot;FC6\u0026quot; \u0026quot;0\u0026quot; ## [12,] \u0026quot;T7\u0026quot; \u0026quot;11\u0026quot; ## [13,] \u0026quot;C3\u0026quot; \u0026quot;6\u0026quot; ## [14,] \u0026quot;Cz\u0026quot; \u0026quot;0\u0026quot; ## [15,] \u0026quot;C4\u0026quot; \u0026quot;1\u0026quot; ## [16,] \u0026quot;T8\u0026quot; \u0026quot;8\u0026quot; ## [17,] \u0026quot;TP9\u0026quot; \u0026quot;10\u0026quot; ## [18,] \u0026quot;CP5\u0026quot; \u0026quot;0\u0026quot; ## [19,] \u0026quot;CP1\u0026quot; \u0026quot;0\u0026quot; ## [20,] \u0026quot;CP2\u0026quot; \u0026quot;1\u0026quot; ## [21,] \u0026quot;CP6\u0026quot; \u0026quot;1\u0026quot; ## [22,] \u0026quot;TP10\u0026quot; \u0026quot;9\u0026quot; ## [23,] \u0026quot;P7\u0026quot; \u0026quot;4\u0026quot; ## [24,] \u0026quot;P3\u0026quot; \u0026quot;0\u0026quot; ## [25,] \u0026quot;Pz\u0026quot; \u0026quot;1\u0026quot; ## [26,] \u0026quot;P4\u0026quot; \u0026quot;3\u0026quot; ## [27,] \u0026quot;P8\u0026quot; \u0026quot;9\u0026quot; ## [28,] \u0026quot;PO9\u0026quot; \u0026quot;10\u0026quot; ## [29,] \u0026quot;O1\u0026quot; \u0026quot;1\u0026quot; ## [30,] \u0026quot;Oz\u0026quot; \u0026quot;3\u0026quot; ## [31,] \u0026quot;O2\u0026quot; \u0026quot;7\u0026quot; ## [32,] \u0026quot;PO10\u0026quot; \u0026quot;3\u0026quot; Agora identificando as ÉPOCAS mais problemáticas e verificar as épocas com problemas em mais de um canal:\nrowSums(CQ) ## [1] 11 7 9 5 2 4 2 2 2 4 15 15 4 3 2 1 0 0 0 0 0 0 0 ## [24] 0 0 1 3 0 3 1 1 0 2 1 2 0 1 2 0 0 1 0 0 0 0 Olhando um canal específico (ex: Fp1) na época 11:\nepoca=11 INICIO=(epoca-1)*TAM+1 FIM=epoca*TAM ts.plot(sinais[INICIO:FIM,1]) "
},
{
	"uri": "/aulas/5_transformadas/",
	"title": "Análise Espectral",
	"tags": [],
	"description": "",
	"content": "O conteúdo dessa aula auxilia no entendimento da amostragem no domínio da frequência e reconstrução de sinais de tempo discreto. No quesito de análise de dados com EEG, os processos de transformação de amostras do domínio do tempo para o domínio da frequência. Estas incluem tanto a análise direta do espectro de frquência, bem como convoluções. Existem variações relacionadas com a transformada, dependendo do tipo de cada função.\nA análise espectral decompõe o sinal de EEG em suas componentes fundamentais (harmônicos) que geram frequências conhecidas que podem ser distinguidas entre si.\nO sinal de EEG é composto de várias outras ondas, de modo que a análise espectral consiste em realizar uma decomposição da onda de EEG em diversas ondas senoidais (ou cossenoides). Essa decomposição consiste na aplicação da transformada de Fourier.\nA transformada de Fourier converte uma seqüência finita de amostras igualmente espaçadas de uma função em uma seqüência de comprimento igual de amostras igualmente espaçadas da transformada de Fourier em tempo discreto (DTFT), que é uma função de frequência de valor complexo (na literatura poderá conferir que muitas vezes o número imaginário \\(i\\) pode ser representado como \\(j\\) para evitar possíveis confusões com intensidade de corrente, também representadas pelo mesmo símbolo).\nO intervalo no qual o DTFT é amostrado é recíproco a duração da sequência de entrada. Uma DFT inversa é uma série de Fourier, possuindo os mesmos valores de amostra da seqüência de entrada original. A DFT é, portanto, considerada uma representação do domínio da frequência da sequência de entrada original. Se a sequência original abranger todos os valores diferentes de zero de uma função, seu DTFT é contínuo (e periódico), e o DFT fornece amostras discretas de um ciclo. Se a sequência original é um ciclo de uma função periódica, a DFT fornece todos os valores diferentes de zero de um ciclo de DTFT.\nO sinal de EEG de: \\(X_T = \\{X_0, X_1, ..., X_{t-1}\\}\\) é denotado pela decomposição:\n\\[ \\begin{align} C_{k} = \\sum_{T=0}^{t-1} X_{T} \\hspace{1mm} \\sin(\\lambda_k T+\\phi) \u0026amp;\u0026amp; \\text{(sendo} \\lambda_k= \\frac{2\\pi i}{N} \\text{a frequência de Fourier)} \\end{align} \\]\nPelas relações trigonométricas:\n\\[ \\begin{align} \\sin(\\lambda t+ \\phi) = \\sin(\\lambda t) \\cos(\\phi) + \\sin(\\phi)\\cos(\\lambda t) \u0026amp;\u0026amp; \\text{(soma de arcos)}\\\\ e^{jx} = \\cos(x)+j\\sin(x) \u0026amp;\u0026amp; \\text{(forma de Euler)} \\end{align} \\]\npode-se representar a decomposição do sinal de EEG como:\n\\[C_{k} = \\sum_{T=0}^{t-1} X_{T} \\hspace{1mm} e^\\frac{-2\\pi k i}{T}\\]\nT = 100 lambda1 = 30 lambda2 = 50 lambda3 = 110 x= sin(2*pi*lambda1*(1:T)/T) +0.5*sin(2*pi*lambda2*(1:T)/T) +0.25*sin(2*pi*lambda3*(1:T)/T) ## [1] 1.469463e-01 2.377641e-01 2.377641e-01 1.469463e-01 -5.514005e-16 ## [6] -1.469463e-01 -2.377641e-01 -2.377641e-01 -1.469463e-01 1.102801e-15 ## [11] 1.469463e-01 2.377641e-01 2.377641e-01 1.469463e-01 1.221552e-16 ## [16] -1.469463e-01 -2.377641e-01 -2.377641e-01 -1.469463e-01 2.205602e-15 ## [21] 1.469463e-01 2.377641e-01 2.377641e-01 1.469463e-01 -9.806459e-16 ## [26] -1.469463e-01 -2.377641e-01 -2.377641e-01 -1.469463e-01 -2.443104e-16 ## [31] 1.469463e-01 2.377641e-01 2.377641e-01 1.469463e-01 1.469267e-15 ## [36] -1.469463e-01 -2.377641e-01 -2.377641e-01 -1.469463e-01 4.411204e-15 ## [41] 1.469463e-01 2.377641e-01 2.377641e-01 1.469463e-01 -3.186248e-15 ## [46] -1.469463e-01 -2.377641e-01 -2.377641e-01 -1.469463e-01 1.961292e-15 ## [51] 1.469463e-01 2.377641e-01 2.377641e-01 1.469463e-01 -7.363355e-16 ## [56] -1.469463e-01 -2.377641e-01 -2.377641e-01 -1.469463e-01 -4.886208e-16 ## [61] 1.469463e-01 2.377641e-01 2.377641e-01 1.469463e-01 1.713577e-15 ## [66] -1.469463e-01 -2.377641e-01 -2.377641e-01 -1.469463e-01 -2.938533e-15 ## [71] 1.469463e-01 2.377641e-01 2.377641e-01 1.469463e-01 -1.004737e-14 ## [76] -1.469463e-01 -2.377641e-01 -2.377641e-01 -1.469463e-01 8.822409e-15 ## [81] 1.469463e-01 2.377641e-01 2.377641e-01 1.469463e-01 -7.597453e-15 ## [86] -1.469463e-01 -2.377641e-01 -2.377641e-01 -1.469463e-01 6.372496e-15 ## [91] 1.469463e-01 2.377641e-01 2.377641e-01 1.469463e-01 -5.147540e-15 ## [96] -1.469463e-01 -2.377641e-01 -2.377641e-01 -1.469463e-01 3.922584e-15 ts.plot(x) Ruído-branco Gaussiano é um sinal aleatório com igual intensidade em diferentes frequências, o que lhe dá uma densidade espectral de potência constante. Em termos discretos, é um sinal discreto cujas amostras são vistas como uma seqüência de variáveis aleatórias não autocorrelacionadas com média zero e variância finita. Para calcular o espectro, utiliza-se a transformada de Fourier: A Transformada rápida de Fourier (em inglês fast Fourier transform, ou FFT) é um algoritmo eficiente para se calcular a Transformada discreta de Fourier (DFT) e a sua inversa. A análise de Fourier converte um sinal do seu domínio original para uma representação no domínio da frequência e vice-versa. Idêntico à definição se T for potência de 2 (ou aproximação de).\nA função spectrum realiza a estimativa da densidade espectral de uma série temporal.\nhist(rnorm(T)) x = x+rnorm(T) ts.plot(x) A função spectrum realiza a estimativa da densidade espectral de uma série temporal. O estimador do espectro (periodograma) é definido como “estimado” pois ele faz uma estimativa e não uma média de todos os dados gerados.\nEssa análise espectral verifica o valor da amplitude da onda para cada frequência de Fourier. Em EEG, existe um grupo de faixas de frequências que aparecem em situações especificas e a análise espectral permite visualizar o comportamento da amplitude das ondas de EEG para cada um desses grupos, de acordo com o objetivo do estudo, identificando as bandas de frequências:\n Delta \u0026lt;4z Teta 4-7hz Alfa 8-12hz Beta 13-30hz Gama \u0026gt; 30hz  O periodograma no R, gráfico com as frequências é determinado por:\nESPECTRO = spectrum(x) # O eixo x ficaria em plot(ESPECTRO$freq, ESPECTRO$spec, type = \u0026quot;l\u0026quot;) Implementando com o banco de dados Realizando a leitura dos dados:\n#leitura dos sinais sinais=read.table(\u0026quot;OlhosFechados.txt\u0026quot;,header=FALSE) #leitura do nome dos canais nomescanais=scan(\u0026quot;NOMEScanais.txt\u0026quot;,what=\u0026quot;string\u0026quot;) dim(sinais) ## [1] 45315 32 nomescanais  ## [1] \u0026quot;Fp1\u0026quot; \u0026quot;Fp2\u0026quot; \u0026quot;F7\u0026quot; \u0026quot;F3\u0026quot; \u0026quot;Fz\u0026quot; \u0026quot;F4\u0026quot; \u0026quot;F8\u0026quot; \u0026quot;FC5\u0026quot; \u0026quot;FC1\u0026quot; \u0026quot;FC2\u0026quot; ## [11] \u0026quot;FC6\u0026quot; \u0026quot;T7\u0026quot; \u0026quot;C3\u0026quot; \u0026quot;Cz\u0026quot; \u0026quot;C4\u0026quot; \u0026quot;T8\u0026quot; \u0026quot;TP9\u0026quot; \u0026quot;CP5\u0026quot; \u0026quot;CP1\u0026quot; \u0026quot;CP2\u0026quot; ## [21] \u0026quot;CP6\u0026quot; \u0026quot;TP10\u0026quot; \u0026quot;P7\u0026quot; \u0026quot;P3\u0026quot; \u0026quot;Pz\u0026quot; \u0026quot;P4\u0026quot; \u0026quot;P8\u0026quot; \u0026quot;PO9\u0026quot; \u0026quot;O1\u0026quot; \u0026quot;Oz\u0026quot; ## [31] \u0026quot;O2\u0026quot; \u0026quot;PO10\u0026quot; Parametrizando as variáveis iniciais:\n#Taxa de amostragem HZ=250 #Tamanho da epoca (janela) em segundos TAMsegundos=5 #Tamanho da epoca (janela) em caselas do vetor de sinais TAM=TAMsegundos*HZ #Numero de epocas Nepocas=floor(nrow(sinais)/TAM) #Numero de canais Ncanais=ncol(sinais) Criando matriz Espectro para armazenar a média dos periodogramas entre todas as épocas para cada canal. As linhas representam diferentes frequências As colunas representam os canais\nESPECTRO=matrix(0,TAM/2,Ncanais) #Calcular para cada canal # Escondi a saída de todos os espectros porque tem muitos canais e épocas na saída for(canal in 1:Ncanais){ y=0 #Calcula a media entre épocas for(epoca in 1:Nepocas){ #Descobrir caselas de inicio e fim de cada epoca INICIO=TAM*(epoca-1)+1 FIM=epoca*TAM y=y+spectrum(sinais[INICIO:FIM,canal], plot = FALSE)$spec }#for da epoca ESPECTRO[,canal]=y/Nepocas }#for do canal  Gráfico do espectro no canal O1, coluna 29. plot((HZ/2)*(1:nrow(ESPECTRO))/nrow(ESPECTRO), ESPECTRO[, 29], type=\u0026quot;l\u0026quot;, xlab=\u0026quot;Frequencia (Hz)\u0026quot;, ylab=\u0026quot;Potencia (uV^2)\u0026quot;) Ajustando o zoom para conseguir visualizar a informação melhor:\nIX=10:200 plot((HZ/2)*IX/nrow(ESPECTRO), ESPECTRO[IX,29], type=\u0026quot;l\u0026quot;,xlab=\u0026quot;Frequencia (Hz)\u0026quot;,ylab=\u0026quot;Potencia (uV^2)\u0026quot;) #Armazenar o espectro estimado médio de olhos fechados ESPECTROof=ESPECTRO Para armazenar o espectro estimado médio de olhos abertos e colocar os dois no mesmo gráfico:\nESPECTROoa=ESPECTRO ##### COLOCAR OS 2 espectros médios no mesmo grafico #ZOOM no grafico IX=10:200 plot((HZ/2)*IX/nrow(ESPECTROof), ESPECTROof[IX,29], type=\u0026quot;l\u0026quot;,xlab=\u0026quot;Frequencia (Hz)\u0026quot;,ylab=\u0026quot;Potencia (uV^2)\u0026quot;) legend(\u0026quot;topright\u0026quot;,c(\u0026quot;Olhos Fechados\u0026quot;,\u0026quot;Olhos Abertos\u0026quot;),lty=c(1,1), col=c(1,2)) No gráfico podemos o espectro para cada frequência (analisar o espectro para cada faixa) e não a evolução em si (pois não está no tempo).\n "
},
{
	"uri": "/aulas/6_eyetracker/",
	"title": "Eye Tracking",
	"tags": [],
	"description": "",
	"content": "A tecnologia de eye tracking (ET) permite o rastreamento ocular, o que possibilita sua aplicação em diversas áreas das ciências, como saúde, psicologia e até mesmo marketing. O aparelho realiza a gravação do comportamento ocular, ou seja, identificando a localização do olhar, a duração de tempo, a dilatação da pupila e o trajeto do olhar. A importância desta técnica se deve ao fato de que o olhar de um indivíduo está diretamente relacionado com a sua atenção, o que faz com que seja possível compreender, em parte, o processo cognitivo de um usuário.\nA distância entre o reflexo que sai da pupila e o reflexo da luz observado na córnea é o que permite identificar a localização do olhar de uma pessoa, esse ponto onde a pessoa fixa o olhar é chamado de “fixação”. A fixação geralmente dura entre 100 e 500 ms (milissegundos). O trajeto que se produz entre duas fixações é chamado de sacada (saccade).\nA hipótese trabalhada nesse tópico é baseada na relação entre as substâncias noradrelina e norepinefrina que associadas ao núcleos cerúleos permitem realizar a seguinte associação: * Aumento da atividade cerebral \\(\\rightarrow\\) dilatação da pupila * Repouso o sistema parassimpático $a pupila se contrai.]\nConforme ocorre a dilatação do diâmetro da pupila, podemos fazer inferências sobre a atividade cerebral dos indivíduos, como por exemplo determinando uma média dos sinais referentes ao diâmetro da pupila e comparar esses valores entre as condições de repouso e tarefa.\n#leitura de dados dados=read.table(\u0026quot;dadosEYE.txt\u0026quot;,header=TRUE,sep=\u0026quot;;\u0026quot;) dim(dados) ## [1] 9099 30 Para ler as primeiras linhas (só pra saber a cara da tabela sem olhar tudo):\nhead(dados) ## RecordingTime..ms. Time.of.Day..h.m.s.ms. Trial Stimulus ## 1 221104.5 21:41:01:349 Trial001 brian-1-recording.avi ## 2 221137.8 21:41:01:382 Trial001 brian-1-recording.avi ## 3 221170.9 21:41:01:415 Trial001 brian-1-recording.avi ## 4 221204.4 21:41:01:449 Trial001 brian-1-recording.avi ## 5 221237.5 21:41:01:482 Trial001 brian-1-recording.avi ## 6 221270.8 21:41:01:515 Trial001 brian-1-recording.avi ## Export.Start.Trial.Time..ms. Export.End.Trial.Time..ms. Participant ## 1 0 302726 brian ## 2 0 302726 brian ## 3 0 302726 brian ## 4 0 302726 brian ## 5 0 302726 brian ## 6 0 302726 brian ## Color Tracking.Ratio.... Category.Group Category.Binocular ## 1 Coral 100 Eye - ## 2 Coral 100 Eye Visual Intake ## 3 Coral 100 Eye Visual Intake ## 4 Coral 100 Eye Visual Intake ## 5 Coral 100 Eye Visual Intake ## 6 Coral 100 Eye Visual Intake ## Index.Binocular Pupil.Diameter.Right..mm. ## 1 - 4.6 ## 2 1 4.6 ## 3 1 4.6 ## 4 1 4.6 ## 5 1 4.6 ## 6 1 4.6 ## Point.of.Regard.Binocular.X..px. Point.of.Regard.Binocular.Y..px. ## 1 693.0 258.7 ## 2 690.1 257.0 ## 3 692.4 257.2 ## 4 692.2 257.5 ## 5 694.2 256.3 ## 6 691.5 257.2 ## Point.of.Regard.Right.X..px. Point.of.Regard.Right.Y..px. ## 1 739.9 271.6 ## 2 739.4 269.7 ## 3 742.4 270.5 ## 4 743.3 269.9 ## 5 743.8 268.9 ## 6 741.0 270.5 ## AOI.Name.Binocular Gaze.Vector.Right.X Gaze.Vector.Right.Y ## 1 - 0 0 ## 2 - 0 0 ## 3 - 0 0 ## 4 - 0 0 ## 5 - 0 0 ## 6 - 0 0 ## Gaze.Vector.Right.Z Video.Time..h.m.s.ms. Annotation.Name ## 1 1 00:00:00:083 - ## 2 1 00:00:00:083 - ## 3 1 00:00:00:125 - ## 4 1 00:00:00:167 - ## 5 1 00:00:00:208 - ## 6 1 00:00:00:250 - ## Annotation.Description Annotation.Tags Mouse.Position.X..px. ## 1 - - - ## 2 - - - ## 3 - - - ## 4 - - - ## 5 - - - ## 6 - - - ## Mouse.Position.Y..px. Scroll.Direction.X Scroll.Direction.Y Content ## 1 - - - - ## 2 - - - - ## 3 - - - - ## 4 - - - - ## 5 - - - - ## 6 - - - - (assim é possível verificar se está tudo ok e se não tem problema algum com os arquivos)\nA função “colnames”\u0026quot; ajuda a identificar o nome das colunas.\n#Leia os nomes das colunas colnames(dados) ## [1] \u0026quot;RecordingTime..ms.\u0026quot; \u0026quot;Time.of.Day..h.m.s.ms.\u0026quot; ## [3] \u0026quot;Trial\u0026quot; \u0026quot;Stimulus\u0026quot; ## [5] \u0026quot;Export.Start.Trial.Time..ms.\u0026quot; \u0026quot;Export.End.Trial.Time..ms.\u0026quot; ## [7] \u0026quot;Participant\u0026quot; \u0026quot;Color\u0026quot; ## [9] \u0026quot;Tracking.Ratio....\u0026quot; \u0026quot;Category.Group\u0026quot; ## [11] \u0026quot;Category.Binocular\u0026quot; \u0026quot;Index.Binocular\u0026quot; ## [13] \u0026quot;Pupil.Diameter.Right..mm.\u0026quot; \u0026quot;Point.of.Regard.Binocular.X..px.\u0026quot; ## [15] \u0026quot;Point.of.Regard.Binocular.Y..px.\u0026quot; \u0026quot;Point.of.Regard.Right.X..px.\u0026quot; ## [17] \u0026quot;Point.of.Regard.Right.Y..px.\u0026quot; \u0026quot;AOI.Name.Binocular\u0026quot; ## [19] \u0026quot;Gaze.Vector.Right.X\u0026quot; \u0026quot;Gaze.Vector.Right.Y\u0026quot; ## [21] \u0026quot;Gaze.Vector.Right.Z\u0026quot; \u0026quot;Video.Time..h.m.s.ms.\u0026quot; ## [23] \u0026quot;Annotation.Name\u0026quot; \u0026quot;Annotation.Description\u0026quot; ## [25] \u0026quot;Annotation.Tags\u0026quot; \u0026quot;Mouse.Position.X..px.\u0026quot; ## [27] \u0026quot;Mouse.Position.Y..px.\u0026quot; \u0026quot;Scroll.Direction.X\u0026quot; ## [29] \u0026quot;Scroll.Direction.Y\u0026quot; \u0026quot;Content\u0026quot; A primeira coluna se traz os “RecordingTime..ms.” Para saber a taxa de amostragem, precisamos avaliar a diferença entre elementos. Entre um MILISEGUNDO e outro, temos um intervalo de sinais coletados.\n#Tomando os 10 primeiros números dados[1:10,1] ## [1] 221104.5 221137.8 221170.9 221204.4 221237.5 221270.8 221304.0 ## [8] 221337.5 221370.7 221403.9 Para conhecer a taxa de amostragem fazemos um elemento menos o anterior, para isso usamos o comando “diff” e tiramos a média:\n Identificando a diferença dos elementos com o elemento anterior:   #Identificamos a diferença entre um elemento menos o anterior, para isso usamos o comando \u0026quot;diff\u0026quot;: diff(dados[,1])  O cálculo da média proporciona a identificação do intervalo, e dessa forma é possível identificar a taxa de amostragem:   DIFF = mean(diff(dados$RecordingTime..ms.)) #A taxa de amostragem em Hertz é dada por: HZ=1000*1/DIFF No caso do cálculo da frequência, HZ, está multiplicado por 1000 pois a coleta está em milisegundos e a frequência tem que considerar segundos.\nVisualizando a informação:\n#Fazer o grafico plot(dados$RecordingTime..ms.*1000, dados$Pupil.Diameter.Right..mm.,type=\u0026quot;l\u0026quot;,xlab=\u0026quot;Tempo(s)\u0026quot;, ylab=\u0026quot;Diametro Pupilar Direito(mm)\u0026quot;) Neste gráfico pode-se identificar piscadas (que não necessariamente é um artefato, pois piscada está associada a estados cognitivos).\nPara essa análise, pretendemos identificar os picos de cima e os de baixo (muito sensíveis posso considerar como missing data).\nIdentificando o diâmetro da pupila direita e os dados que quero ignorar:\n#Sinal do diametro da pupila direita pupilD = dados$Pupil.Diameter.Right..mm. #Detectar outliers, piscadas e missing data IX=which(pupilD\u0026lt;4 | pupilD\u0026gt;6) pupilD[IX]=NA Delineamento do experimento: * 30 segundos em repouso seguidos de 30s de tarefa (repetindo ciclo), fazendo a subtração de 13 a partir do 2000 (e decrescendo!) * Cada época de 30s se refere a HZ30 caselas no vetor pupilD.  Devemos criar um vetor indicando a condição para cada casela do vetor pupilD: * O vetor CONDICAO armazenará os dois tipos de estímulos existentes, inicialmente marcado como 1 para todos os dados\nCONDICAO = array(1, length(pupilD)) Durante os períodos de contagem de subtração mental (a cada 30s) há um repouso:\n# identificando o inicio do intervalo, com base nos 30s de trial: inicio = ceiling(HZ*30) # calculando o teto, que é o final do trial, 30s depois: final = ceiling((HZ*30)+(HZ*30)) Calculando as condições (para aula fizemos de uma forma manual para ficar mais rápido). O recomendado mesmo seria reproduzir as linhas acima num laço e identificar as condições e intervalos.\nUma vez identificado os períodos do trial, atualizar o vetor CONDICAO para os parâmetros para 2 nos intervalos em que ocorre o estímulo:\n#Colocar 2 nas caselas durante os periodos de subtracao mental CONDICAO[902:1803]=2 CONDICAO[2706:3607]=2 CONDICAO[4510:5411]=2 CONDICAO[6314:7215]=2 CONDICAO[8118:9019]=2 Analisando as duas condições (repouso e atividade), podemos visualizar com boxplot:\n#Boxplot do diametro de pupila nas duas condicoes #os proximos 2 comandos sao equivalentes boxplot(pupilD[which(CONDICAO==1)],pupilD[which(CONDICAO==2)]) boxplot(pupilD~CONDICAO) Além disso, queremos avaliar a transição repouso da tarefa para cada bloco em cada região.\nOlhando apenas uma condição:\nplot(1:1803,pupilD[1:1803],type=\u0026quot;l\u0026quot;) Olhando todas as condições:\nplot(1:1803,pupilD[1:1803],type=\u0026quot;l\u0026quot;) lines(1:1804,pupilD[1804:3607],col=2) lines(1:1804,pupilD[3608:5411],col=3) lines(1:1804,pupilD[5412:7215],col=4) lines(1:1804,pupilD[7216:9019],col=6) É possível ver uma tendência dos dados. Para uma visualização melhor dos dados, analisamos a curva média da pupila nesses períodos:\n#calcular a curva media MEDIA=(pupilD[1:1804]+pupilD[1804:3607]+pupilD[3608:5411]+pupilD[5412:7215]+pupilD[7216:9019])/5 No caso do plot, estamos multiplicando por 60 por se tratar de um ciclo de 30s de atividade e 30s de repouso:\nplot(60*(1:1804)/1804,MEDIA,type=\u0026quot;l\u0026quot;,xlab=\u0026quot;Tempo(s)\u0026quot;,ylab=\u0026quot;Diametro(mm)\u0026quot;) abline(v=30,lty=3) A dificuldade nestes exercícios é a identificação das caselas a serem trabalhadas.\nmediarep = mean(pupilD[which(CONDICAO==1)]) # Desvio padrão da condição repouso: desviorep = sd(pupilD[which(CONDICAO==1)]) # Media da condição tarefa: media = mean(pupilD[which(CONDICAO==2)]) # Desvio padrão da condição tarefa: desviopad = sd(pupilD[which(CONDICAO==2)]) "
},
{
	"uri": "/aulas/7_ressonanciamagnetica/",
	"title": "Ressonância magnética",
	"tags": [],
	"description": "",
	"content": "Imagens estruturais T1 e Voxel-based-morphometry (VBM) A Ressonância Magnética (RM) é um método de diagnóstico por imagem, estabelecido na prática clínica, utilizada em pesquisas científicas e diagnósticos clínicos. Dada a alta capacidade de diferenciar tecidos e coletar informações bioquímicas, o espectro de aplicações se estende a todas as partes do corpo humano e explora aspectos anatômicos e funcionais. A física da Ressonância Magnética Nuclear (RMN) aplicada à formação de imagens é complexa e abrangente, uma vez que tópicos como eletromagnetismo, supercondutividade e processamento de sinais têm de ser abordados em conjunto para o entendimento deste método, usando fortes campos magnéticos e ondas de rádio para obtenção de imagens de múltiplas partes do corpo. Esta revisão tem por objetivo explorar de forma introdutória e simplificada a física da imagem por ressonância magnética e demonstrar equipamentos, mecanismos e aplicações da RM, servindo como texto de apoio para o aprofundamento do assunto.\nAs imagens cerebrais de ressonância magnética podem ser separadas em duas grandes categorias: a estrutural, que lida com o estudo da estrutura do cérebro e o diagnóstico de doenças e lesões, e a funcional que é capaz de detectar variações no fluxo sanguíneo em resposta à atividade neural.\nComo não consegui explicar bem o fenômeno, segue a explicação das notas de aula da Cândida Barreto:\nOs núcleos atômicos contêm prótons e nêutrons com movimento intrínseco de rotação. Os Prótons contêm carga elétrica, podemos considerar que a carga elétrica do próton é distribuída e rotacional ao longo do eixo central. A Distribuição de carga em movimento de rotação produzem um campo magnético de modo que o arranjo é análogo a um imã, tal que o próton pode ser visto como um dipolo magnético.\nEm muitos núcleos os prótons e nêutrons estão emparelhados de tal forma que seus spins e momentos magnéticos se cancelam. Núcleo com número ímpar de prótons e nêutrons exibe spin e momento magnético. O átomo de hidrogênio possui um único próton e é o elemento mais abundante no corpo, tal que este gera o sinal de ressonância magnética nuclear mais forte entre os núcleos. Normalmente os momentos magnéticos nucleares têm direção aleatória. Sob ação de um forte campo magnético estático externo o próton vai se comportar como uma pequena bússola e a direção do seu momento magnético tende a se alinhar ao campo externo.\nA detecção do sinal do sinal de RMN é feita a partir da perturbação no vetor de magnetização de tal forma a torná-lo mensurável. É feito uma Irradiação dos prótons por um sinal de rádio frequência (RF) com fótons de energia igual à diferença entre os estados que provoca a transição de um certo número de prótons para o estado antiparalelo, de modo que, ao retirar o estimo de RF ocorre um relaxamento longitudinal de modo que \\(M_0\\) volta ao estado paralelo. Já na componente transversal, o pulso de RF oscila com frequência igual à frequência dos prótons (Frequência de Larmor), de modo que os prótons começam a precessionar em fase, produzindo um sinal magnético coerente que pode ser medido.\nFrequência de Larmor: Em 1897, o físico inglês Joseph Larmor (1857-1942) demostrou que o efeito de um campo magnético sobre partículas carregadas que descrevem órbitas circulares era o de superpor à frequência precessional em torno do campo externo, conhecida desde então como Frequência de Larmor.\nA expressão da frequência de Larmor do movimento de precessão nuclear é:\n\\(\\nu =\\omega _{0}/2\\pi\\)\nNo caso do hidrogênio:\n$ = 42.58 mh z /tesla $\nNa RM clínica: \\(0.5 - 1.5 Tesla\\)\nO método de neuroestimulação cerebral teve seus primeiros estudos nos anos 90. Novas pesquisas revelam que é eficaz e tem dado sinais de que será cada vez mais usado. Alguns hospitais e clínicas começam a oferecê-lo no Brasil.\nA diferença entre T1 e T2 está na intensidade de sinal baseada em tempos de relaxamento T1, o TR da sequência é encurtado. Uma sequência de TR curto e TE curto produz uma imagem ponderada em T1. Isso permite que estruturas com tempos de relaxamento T1 curtos sejam brilhantes (gordura, líquidos proteinogênicos) e estruturas com T1 longo sejam escuras (neoplasia, edema, inflamação, líquido puro). As imagens ponderadas em T2 já não são muito nítidas e são utilizadas para analises da ressonância magnética funcional(fMRI). Assim, de modo geral, a criação de uma imagem por RMN pode ser descrita pelos seguintes passos:\n Aplicar campo magnético estático.  Selecionar corte aplicando campo magnético em gradiente.  Aplicar pulsos de RF.  Receber sinal de RF.  Converter o sinal em imagem.   A neuroestimulação pode ser feita de duas formas: * a) com um aparelho que libera ondas magnéticas (estimulação magnética transcraniana) e é colocado próximo da cabeça * b) com eletrodos implantados no cérebro (estimulação elétrica)\nA estimulação magnética transcraniana tem sido útil no tratamento de pacientes com depressão, transtorno bipolar (alternância entre depressão e euforia) e alucinações auditivas (um dos sinais da esquizofrenia). Os sintomas tornam-se mais brandos ou desaparecem.\nO método não requer cirurgia. Exames de imagem determinam o ponto do cérebro que precisa ser estimulado. Com base nessa referência, o médico aplica a técnica no consultório.\nA Potência do aparelho é avaliada pela intensidade do campo magnético, ou seja, do seu magnetismo. Em clínicas o equipamento varia entre menos de 1, até 3 Tesla.\n Potência abaixo de 1 Tesla São equipamentos de campo aberto, usados para realizar exames de extremidades corporais, com baixa qualidade de imagens.  Potência de 1 Tesla: Está presente nos aparelhos fabricados até 2002. Tem desenho de campo pouco eficiente, poucas funcionalidades e imagens de baixa qualidade. Utilizados no campo veterinário hoje em dia.  Potência de 1,5 Tesla: São mais comuns nas clínicas de radiologia. É o suficiente para a maioria dos exames e realizado de rotinas nos exames médicos.  Potência de 3 Tesla: Se encaixa no que chamávamos na residência de equipamento de pesquisa e que acaba sendo incorporado na rotina. O problema aqui são os dispositivos implantáveis antigos como marcapassos que não possuem proteção suficiente para o campo magnético e não há estudos sobre sua utilização em gestantes.   Na FMUSP há um equipamento 7T: o Magnetom 7T MRI é um equipamento de ultra-alto campo que oferece maior nível de sensibilidade e detalhamento para medidas estruturais e funcionais do organismo humano com ressonância magnética, tecnologia de diagnóstico por imagens que possibilita identificar propriedades de uma substância do corpo humano de modo não invasivo. As bobinas do aparelho interagem com os tecidos, em seu interior, utilizando ondas eletromagnéticas. Em seguida, são construidas as imagens, decodificando o sinal recebido dos átomos de hidrogênio da água que compõe o corpo humano. Tesla (homenagem a Nikola Tesla, inventor que fez grandes contribuições para a utilização da eletricidade e do magnetismo) é uma unidade de medida do campo magnético. A precisão das imagens geradas por um equipamento 7 Tesla, traduzida na resolução e na capacidade de discernir alterações, é mais de 5,4 vezes superior à de equipamentos 3 Tesla e 21 vezes superior à de aparelhos 1,5 Tesla utilizados em hospitais. Um aumento de duas vezes no campo magnético quadruplica a precisão das imagens.\nVantagens da MRI:\n Escaneamento de uma corte transversal cerebral em menos de 2 segundos, permitindo mapear a maior parte do cérebro em um ou dois minutos;\n Resoluções espaciais muito mais precisas de 2 a 3mm, conseguindo coletar informações em voxels (união volume com pixel) de aproximadamente o o tamanho de um grão de arroz;\n Não requer a utilização de contraste possibilitando um mapeamento mais extenso, e acaba com o receio de ingestão de materiais radioativos.\n  Desvantagens do MRI:\n Alguns estudiosos da área dizem que o aumento detectado no fluxo sanguíneo pode estar alimentando mais de uma operação, devido ao fato da ação neuronal levar milionésimos de segundos, enquanto o afluxo de sangue continua por dois a seis segundos;\n Um vez que cada voxel encerra milhares de neurônios, pode ser necessária a ativação de milhares ou mesmo milhões deles para acender uma região cerebral, é como se uma seção inteira de um estádio tivesse de gritar para ser ouvida;\n Em alguns casos um pequeno grupo de neurônios puxando pouco sangue, ou um circuito fino de neurônios conectado a regiões mais amplas, podem executar funções tão cruciais quanto um grupo maior, mas tanto passarem desapercebidos quanto serem identificados como uma função de menor importância;\n É possível que alguns neurônios funcionem melhor do que outros, e assim consumindo menos sangue, o que pode representar erroneamente a neurodinâmica real.\n    Leitura dos dados de MRI: Com esses equipamentos é possível extrair dados de MRI nas direções axial, coronal e sagital:\n O plano horizontal, transverso ou axialatravessa o eixo menor do corpo, do dorso até o ventre , isto é, da posição posterior para a anterior. Divide a estrutura atravessada em porções superior e inferior.\n Plano coronal ou plano frontal é um dos tipos de planos anatômicos, dividindo o corpo com cortes verticais e perpendiculares ao plano mediano. Assim é possível definir a parte ventral/anterior (frente) da parte dorsal/posterior (costas).\n O plano sagital mediano (ou plano mediano) divide o corpo em duas metades iguais, direita e esquerda. 2. Plano Frontal: são todos os planos verticais com trajeto paralelo à sutura coronal do crânio (ou da “testa”). O plano coronal divide o corpo em duas metades diferentes, anterior e posterior.\n  Para ler os arquivos nift e analyze, precisamos utilizar a biblioteca “AnalyzeFMRI”.\n#Instalar biblioteca para ler arquivos nifti e analyze #install.packages(\u0026quot;AnalyzeFMRI\u0026quot;) #Carrega biblioteca require(AnalyzeFMRI) #leitura da imagem no arquivo nifti volume = f.read.volume(\u0026quot;ch2.nii\u0026quot;) # Verificar a dimensão dos dados dim(volume) ## [1] 181 217 181 1 Fazer figuras desta imagem de ressonância, identificamos pelo eixo X, Y e Z e fixamos conforme a referência que queremos (sagital, coronal, axial)\n# Imagem AXIAL na secção z= 90, deixando x e y livres: # as.data.frame exibe menos poluido. volume[,,90,1] image(volume[,,90,1]) Alterando para uma escala de cinza:\nimage(volume[,,90,1], col = gray((1:50)/50)) (é possível verificar o caldado, ventrículo, giro fusiforme)\nPara visualizar no ângulo sagital:\n#Imagem SAGITAL na fatia x=100, deixo o y e z livres image(volume[100,,,1],col=gray((1:50)/50)) Para visualizar no coronal:\n#Imagem Coronal na fatia y=100 image(volume[,100,,1], col = gray((1:50)/50)) Nota: Não é possível identificar facilmente se o lado é esquerdo ou direito. Depende se a notação da imagem coletada é radiológica ou neurológica.\nOlhando as coordenadas em voxel (o parâmetro pode ter o primeiro argumento como um intervalo, depende da análise).\n#Colocar zero nas coordenadas x=100,y=100,z=150 (voxels) volume[100,100,150,1]=0  "
},
{
	"uri": "/aulas/8_fmri/",
	"title": "fMRI",
	"tags": [],
	"description": "",
	"content": "A imagem por ressonância magnética funcional (fMRI, do inglês Functional Magnetic Ressonance Imaging), é uma técnica específica do uso da imagem por ressonância magnética (MRI, do inglês Magnetic Resonance Imaging) capaz de detectar variações no fluxo sanguíneo em resposta à atividade neural. A fMRI tem dominado o cenário do mapeamento cerebral em parte devido ao fato de não utilizar radiação ionizante ou contraste exógeno. Além disso, essa técnica possui boa resolução espacial, embora a resolução temporal seja baixa em relação a outras técnicas, como EEG e NIRS.\nAs mudanças cardiovasculares cerebrais estão relacionadas à atividade elétrica neuronal, devido ao aumento do consumo de oxigênio. O Oxigênio é carregado pela hemoglobina. A hemoglobina desoxigenada (deoxi-Hb) é paramagnética ao passo que a hemoglobina oxigenada (Hb) é diamagnética. Desse modo, a mudança na proporção de Hb/deoxi-Hb durante o aumento de fluxo sanguíneo oxigenado leva a um pequeno aumento do sinal de ressonância subjacente ao local onde ouve aumento da atividade de neurônios. Esse mecanismo é a base do contraste utilizado na maioria dos experimentos de fMRI, e é conhecido como contraste BOLD (do inglês, Blood Oxygenation Level Dependent).\nJá em 1936, os químicos Linus Pauling e Charles Coryell mostraram que a hemoglobina possui diferentes momentos magnéticos, dependendo de como seus grupos Hemes estão ligados ao O2. Já em 1990, Seiji Ogawa reconheceu que essa diferença poderia ser usada em MRI para servir de contraste.\nEM 1989: Hipotese de Roy \u0026amp; Sherrington: Aumento da atividade metabólica local, por questões de manutenção da homeostase, é seguido de um aumento de fluxo sanguíneo para esta região.\nEm um estudo pioneiro, em 1990, Ogawa e colegas avaliaram roedores com um equipamento de MRI de alto campo magnético (7.0 T) e investigaram a hipótese de que a manipulação da proporção os níveis de O2 e CO2 no sangue alteraria o contraste em imagens ponderadas T2*. Eles mostraram redução do sinal próximo a vasos ricos em dHb, que era revertido pelo aumento do fluxo sanguíneo oxigenado através da manipulação da quantidade de gás inalado.\nO cérebro é incapaz de armazenar glicose, embora esse seja o único substrato que ele consome. Maior fluxo sanguíneo significa maior disponibilidade de glicose e oxigênio, na forma de hemoglobina oxigenada, em parte devido à dilatação local dos vasos sanguíneos. O aumento do fluxo sanguíneo também acompanha o aumento da atividade elétrica de neurônios. Comumente o aumento do fluxo de oxigênio é maior que o oxigênio consumido na queima de glicose, o que causa a diminuição de dHb nesses vasos sanguíneos. Essas mudanças nas propriedades magnéticas do sangue, fazem com que as áreas ativas interfiram menos na magnetização transversa e no eventual decaimento de T2* induzido por deformação magnética espacial, levando a um leve aumento do sinal de MRI\nO parâmetro básico para a resolução temporal é o Tempo de repetição ou TR, que representa o quão frequentemente uma determinada fatia do cérebro é excitada por um pulso RF e decaí ao ponto inicial,, o que no sinal será observado por sua perda de magnetização relativa a T2. TRs podem variar de muito curtos (500 ms) até muito longos (3 s). Especificamente para o fMRI, a resposta hemodinâmica dura em torno de 10 segundos, aumentando multiplicadamente (sempre proporcional ao valor original), atingindo o ápice de 4 a 6 segundos, e então caindo da mesma maneira. Mudanças no fluxo sanguíneo ocorrem via mudanças no sistema vascular concomitantes a atividade neuronal ao longo do tempo. Por essas resposta serem contínuas e suaves, fazer uma amostragem com TRs mais rápidos não iria ajudar. Apenas aumentariam o número de pontos na curva obtidos por uma simples interpolação linear mais não adicionaria informação relevantes aos dados. Paradigmas experimentais tais como um escalonamento quando ocorre a apresentação do estímulo em várias séries de testes podem ajudar a melhorar a resolução temporal, mas reduz o número efetivo de dados pontuais obtidos.\nA mudança no sinal MR causado pela atividade neuronal é chamada de resposta hemodinâmica (HDR do inglês Hemodynamic response). O HDR possui um atraso em relação a atividade neuronal entre 1 e 2 segundos, visto que o sistema vascular leva esse tempo para responder a necessidade cerebral de glicose. O pico do sinal da MR normalmente ocorre 5 segundos após o estimulo. Se os neurônios continuarem disparando, o que é chamado de estímulo contínuo, o pico se espalha para um platô enquanto os neurônios se mantiverem ativos. Depois que a atividade cessa, o sinal BOLD cai para os valores originais, os níveis basais, ou podem cair ainda mais em um fenômeno chamado undershoot (supra limiar). A resposta de um único voxel ao longo do tempo representa seu curso temporal. O sinal pode vir de maneira indesejada o que é chamado de ruído e normalmente advém do próprio aparelho de ressonância magnética, da atividade cerebral espontânea, e pode ser tão forte quanto o sinal em si. Para eliminar o ruído estudos que fazem uso do fMRI repetem o estimulo múltiplas vezes para calcular uma média.\nBrain Extraction Tool O algoritmo BET elimina o tecido não cerebral a partir de uma imagem de toda a cabeça. Ele também pode estimar as superfícies interna e externa do crânio e a superfície externa do couro cabeludo, no caso de imagens de entrada T1 e T2 de boa qualidade.\n Processamento dos dados e tratamento Para o tratamento e processamento das imagens, pode-se separar nos seguintes passos:\n Suavização espacial (spatial smoothing): borrar a imagem. Muitas vezes, quando trabalhamos com imagens distintas, temos cérebros com formatos distintos. Para padronizar esses dados, utilizamos métodos de deformação de imagem para adição a um modelo padrão. Um modelo comum é o MNI152, deformando para um template, o que chamamos de normalização espacial. Como essa normalização nunca é perfeita, ainda sobram alguns voxels que não ficam perfeitamente alinhados.\n normalização espacial\n segmentação: separa entre o que for substância branca, substância cinzenta e liquor.\n Voxel based morphometry VBM: Baseado nas três etapas e com análise de inferência bayesiana: Para cada voxel, estima a prob (%) de ser substância branca, cinzenta, liquor, etc…\n  No geral, analisamos mais substância cinzenta no VBM.\nJohn Ash Burner indicou que não querem verificar a probabilidade mas sim a redução modulando a deformação e tendo uma estimativa de volume. Explicação do Jacobiano do modelo da imagem: Efeito da modulação de imagens segmentadas. O determinante Jacobiano representa as mudanças de volume devido à normalização espacial não linear. Essas alterações de volume são usadas para modular o resultado da segmentação.\nO VBM segmenta a imagem entre massa cinzenta, branca e fluído espinal, adequando as imagens para um template e suavizando-as. A análise estatística é baseada no General Linear Model (GLM). Apesar a base do VBM ser constante, o algotitmo se altera. O modelo básico constitui na normalização, segmentaçãoe suavização.\nEx: GM-modulated (massa cinzenta modulada)…é o VBM com a modulação pelo jacobiano\nCom grupos de indivíduos, tem-se grupos de voxel em vários grupos para cada voxel para identificar a intensidade do GM-modulated em múltiplos indivíduos (normalmente fazem um teste T). Muitos estudos se apoiam no VBM, mas conforme avançam as pesquisas de computação, a modelagem do córtex vem como uma superfície cortical ao invés da massa cinzenta.\n No SPM: O plugin SPM para o MATLAB executa diversas etapas no processamento de imagens de RM. Deformação não linear: cada região da imagem ele faz um mapeamento para o template.\nNo SPM aplica-se algoritmo para smooth a imagem, a convolução basicamente faz uma média ponderada dos vizinhos de cada conjunto de voxels.\n Bases físicas, neurológicas e pré-processamento O tecido pode ser caracterizado por dois tempos diferentes de relaxamento - T1 e T2. No T1 (tempo de relaxamento longitudinal) é a constante de tempo que determina a taxa na qual os prótons excitados retornam ao equilíbrio. É uma medida do tempo gasto para girar prótons para realinharem-se com o campo magnético externo. T2 (tempo de relaxamento transverso) é a constante de tempo que determina a taxa na qual os prótons excitados atingem o equilíbrio ou saem de fase um com o outro. É uma medida do tempo necessário para os prótons girarem e perderem a coerência de fase entre os núcleos girando perpendicularmente ao campo principal.\nPara ver estruturas cerebrais, utilizamos: * T1 * T2 * Flair * DWI\nO EPI T2*: uma variação para aquisição de dados fMRI. Configuração de dados de forma extremamente sensível.\nObs: DTI para ver tratos/tractografia ou outras análises\n Resolução fMRI e comparação: No caso de fMRI, a coleta está em torno de 1-3s, em geral coleta-se a cada 2s. A tava de amostragem então é a cada 0,5hz, o que é muito mais lento que outras técnicas como EEG, NIRS etc. A resolução temporal é muito inferior ao EEG mas a resolução espacial é melhor que o EEG.\nEm ressonância, denominamos por TR o tempo de repetição (tempo entre as imagens da coleta).\nPET e SPECT possuem maior resolução temporal e espacial que fMRI:\nEmbora a ressonância magnética funcional (fMRI) tenha algumas vantagens sobre PET e SPECT, devido às suas características de melhor resolução espacial e, principalmente, temporal, não-invasiva (sem uso de radiação ionizante), que permite múltiplas seqüências/estudos do mesmo indivíduo na mesma sessão, os modelos para quantificação de informação e a capacidade de estudar uma gama muito maior de funções cerebrais, que incluem principalmente a neurotransmissão e os neurorreceptores, são específicos da tomografia de emissão (PET e SPECT)\n Processo de acoplamento hemodinâmico (medida indireta):  Aumento da atividade neuronal local Dilatação das arteríolas Aumento do fluxo sanguíneo Diminuição da concentração de desoxihemoglobina Aumento da sinal BOLD por conseguinte   Pré-processamento das imagens: Fases do pré-processamento:\nSlice-timing correction: Faz interpolação para virtualmente alinhar todas as fatias para o mesmo ponto no tempo para ficar na mesma referência. Maior parte dos programas utiliza método da translação de fase (coleta ascendente, descendente, intercalado)\n Correção de movimento/Motion Correction: Ou também images realignment. Translação de corpo rígido. Temos três parâmetros de translação (base X, Y, Z), e três parâmetros de rotação. Por isso chamamos de translação de 6 parâmetros.\n Filtros/detrend: Para cada voxel, é aplicado um filtro temporal ao sinal correspondente. Esse filtro em geral pode ser separado em dois tipos (pode variar conforme taxa de amostragem). Se o interesse é obter mapas de ativação, em geral se utiliza um filtro passa-alta. O sinal da ressonância também é sensível a temperatura (não só desoxi). Conforme a máquina funciona e esquenta, queremos eliminar os artefatos de baixa-frequência.\n  Para análise de conectividade funcional, utiliza-se passa-banda\nOutro filtro comum é o detrend: O sinal bold pode estar caindo com o tempo e para isso é aplicado o filtro: aplicando regressão linear menos o predito (linear), é possível ajustar também fazer um quadrático (parábola), já também foi aplicado cúbico na tentativa de limpar os ruídos. Geralmente também pode ser de baixa frequência.\nSpatial normalization: Colocar no template específico para todos os sujeitos. Trabalhar com grupos de indivíduos.\n Spatial smoothing: Corrigir alguns voxels que não foram bem encaixados e manter as propriedades estatísticas. “Borrar”\n  Leitura dos dados:\n#Carrega a biblioteca require(AnalyzeFMRI) ## Carregando pacotes exigidos: AnalyzeFMRI ## Carregando pacotes exigidos: R.matlab ## R.matlab v3.6.1 (2016-10-19) successfully loaded. See ?R.matlab for help. ## ## Attaching package: \u0026#39;R.matlab\u0026#39; ## The following objects are masked from \u0026#39;package:base\u0026#39;: ## ## getOption, isOpen ## Carregando pacotes exigidos: fastICA ## Carregando pacotes exigidos: tcltk ## Carregando pacotes exigidos: tkrplot #Leitura dos dados volumes=f.read.volume(\u0026quot;Stroop.nii\u0026quot;) #Checar as dimensoes da imagem dim(volumes) ## [1] 45 54 45 180 #Plotar uma imagem axial do primeiro volume image(volumes[,,25,1],col=gray((0:100)/100)) Verificar em todos os pontos do tempo:\n#Plotar o sinal BOLD da imagem preprocessada #no voxel=x=20,y=30,z=25 ts.plot(volumes[20,30,25,]) Para marcar a posição do voxel:\nvolumes[20,30,25,]=0 image(volumes[,,25,1], col=gray((0:100)/100)) dim(volumes) ## [1] 45 54 45 180 Próxima prova: não cobrará código. Conceito de voxel based morphometry (VBM) e de Ressonância Magnética Funcional (aula de hoje).\n "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/",
	"title": "Processamento de sinais neurais",
	"tags": [],
	"description": "",
	"content": "Essa página contém as notas da aula referentes ao curso de Processamento de Sinais Neurais dos cursos Bacharelado/Pós Graduação em Neurociência da UFABC.\nUtilize o menu ao lado para encontrar o conteúdo do curso.\nOs tópicos das aulas se encontram dentro do menu \u0026ldquo;Conteúdo\u0026rdquo; ao lado. As notas foram criadas em R Markdown, utilizando o R Studio.\nQuaisquer correções, erros e sugestões de acréscimos, favor entrar em contato com amanda.yumi at ufabc.edu.br\n"
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]